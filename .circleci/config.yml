version: 2
jobs:
  test:
    docker:
      - image: circleci/python:2.7-jessie

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "setup/requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            virtualenv venv
            . venv/bin/activate
            pip install -r setup/requirements.txt
            pip install flake8

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "setup/requirements.txt" }}
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            cp sal/example_settings.py sal/settings.py
            python manage.py test
            python manage.py migrate
      - run:
          name: run linting
          command: |
            . venv/bin/activate
            flake8

      - store_artifacts:
          path: test-reports
          destination: test-reports
  build_latest:
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker
      - run: docker build -t macadmins/sal:latest .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push macadmins/sal:latest
      - run:
        command: |
          curl --user ${CIRCLE_API_USER_TOKEN}: \
          --data build_parameters="{\"TAG\":\"latest\"}"
          --data revision=$CIRCLE_SHA1 \
          https://circleci.com/api/v1.1/project/github/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME/tree/$CIRCLE_BRANCH

  build_branch:
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t macadmins/sal:$CIRCLE_BRANCH .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push macadmins/sal:$CIRCLE_BRANCH
      - run:
        command: |
          curl -X POST --header "Content-Type: application/json" -d '{
          "parallel"\: 2, //optional, default null
          "revision"\: "f1baeb913288519dd9a942499cef2873f5b1c2bf" // optional
          "build_parameters": { // optional
            "TAG"\: $CIRCLE_BRANCH
          }
        }
        ' https://circleci.com/api/v1.1/salopensource/github/grahamgilbert/sal/tree/master?circle-token=$CIRCLE_API_USER_TOKEN


  build_tag:
    docker:
      - image: docker:17.05.0-ce-git

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - run: docker build -t macadmins/sal:$CIRCLE_TAG .
      - run: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run: docker push macadmins/sal:$CIRCLE_TAG
      - run:
        command: |
          curl -X POST --header "Content-Type: application/json" -d '{
          "parallel": 2, //optional, default null
          "revision": "f1baeb913288519dd9a942499cef2873f5b1c2bf" // optional
          "build_parameters": { // optional
            "TAG": $CIRCLE_TAG
          }
        }
        ' https://circleci.com/api/v1.1/salopensource/github/grahamgilbert/sal/tree/master?circle-token=$CIRCLE_API_USER_TOKEN

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          filters:
            tags:
              only: /.*/
      - build_latest:
          requires:
            - test
          filters:
            branches:
              only: master
      - build_branch:
          requires:
            - test
          filters:
            branches:
              ignore: master
      - build_tag:
          requires:
            - test
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/